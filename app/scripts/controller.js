// Generated by CoffeeScript 1.7.1
var AmendModel, AmendView, BillModel, BillsCollection, ChartView, ContentLayout, EnactedModel, EnactedView, InfoModel, InfoView, MainController, MetaLayout, SearchResults, SearchView, SubjectsModel, SubjectsView, WelcomeView,

var AmendModel, AmendView, BillModel, BillsCollection, ChartView, ContentLayout, InfoModel, InfoView, MainController, MetaLayout, SearchResults, SearchView, SubjectsModel, SubjectsView, WelcomeView,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

WelcomeView = require('./views/welcome-view.coffee');

SearchView = require('./views/search-view.coffee');

ContentLayout = require('./views/content-views/content-layout.coffee');

ChartView = require('./views/content-views/chart-view.coffee');

SearchResults = require('./views/content-views/search-results-view.coffee');

MetaLayout = require('./views/meta-views/meta-layout.coffee');

BillModel = require('./models/bill-model.coffee');

BillsCollection = require('./collections/bills-collection.coffee');

SubjectsView = require('./views/meta-views/meta-subjects-view.coffee');

SubjectsModel = require('./models/meta-subjects-model.coffee');

InfoView = require('./views/meta-views/meta-info-view.coffee');

InfoModel = require('./models/meta-info-model.coffee');

AmendView = require('./views/meta-views/meta-amend-view.coffee');

AmendModel = require('./models/meta-amend-model.coffee');

EnactedView = require('./views/content-views/enacted-view.coffee');

EnactedModel = require('./models/enacted-model.coffee');

AmendView = require('./views/meta-views/meta-amend-view.coffee');

AmendModel = require('./models/meta-amend-model.coffee');

EnactedView = require('./views/content-views/enacted-view.coffee');

EnactedModel = require('./models/enacted-model.coffee');

MainController = (function(_super) {
  __extends(MainController, _super);

  function MainController() {
    return MainController.__super__.constructor.apply(this, arguments);
  }

  MainController.prototype.initialize = function(options) {
    return this.showSpinner(this.options.regions.content);
  };

  MainController.prototype.showSpinner = function(region) {
    region.empty();
    return region.$el.append(App.spinner.el);
  };

  MainController.prototype.home = function() {
    var currentCongress, firstBill, firstBillId;
    currentCongress = 113;
    firstBill = 'hr2397';
    firstBillId = currentCongress + '-' + firstBill;
    return this.showBill(firstBillId);
  };

  MainController.prototype.showBill = function(billId) {
    this.showSpinner(this.options.regions.content);
    return this.getData(billId).then((function(_this) {
      return function(billModel) {
        return _this.showAll(billModel, billId);
      };
    })(this));
  };

  MainController.prototype.getData = function(billId) {
    var billModel, deferred;
    deferred = new $.Deferred();
    if (!window.localStorage.getItem(billId)) {
      billModel = new BillModel({
        id: billId
      });
      billModel.fetch().then(function(res) {
        window.localStorage.setItem(billId, JSON.stringify(res));
        return deferred.resolve(billModel);
      });
    } else {
      billModel = new BillModel({
        votes: JSON.parse(window.localStorage.getItem(billId))
      });
      deferred.resolve(billModel);
    }
    return deferred.promise();
  };

  MainController.prototype.showAll = function(billModel, billId) {
    var chartView, contentLayout, enactedModel, enactedView, metaLayout;
    this.searchView(billModel);
    if (!window.localStorage.getItem('omnibus-visited')) {
      this.welcomeView(billModel);
      window.localStorage.setItem('omnibus-visited', true);
    }
    contentLayout = new ContentLayout;
    this.options.regions.content.show(contentLayout);
    chartView = new ChartView({
      model: billModel
    });
    enactedModel = new EnactedModel({
      id: '113'
    });
    enactedView = new EnactedView({
      model: enactedModel
    });
    contentLayout.chart.show(enactedView);
    this.listenTo(chartView, 'showAmendmentData', function(data) {
      return this.makeAmendmentMeta(data).then(function(amendView) {
        return metaLayout['meta3'].show(amendView);
      });
    });
    metaLayout = new MetaLayout;
    contentLayout.meta.show(metaLayout);
    this.showSpinner(metaLayout.meta1);
    this.showSpinner(metaLayout.meta2);
    this.makeInfoMeta(billId).then(function(infoView) {
      return metaLayout['meta1'].show(infoView);
    });
    return this.makeSubjectsMeta(billId).then(function(subjectsView) {
      return metaLayout['meta2'].show(subjectsView);
    });
  };

  MainController.prototype.makeInfoMeta = function(billId) {
    var deferred, infoModel;
    deferred = new $.Deferred();
    infoModel = new InfoModel({
      id: billId
    });
    infoModel.fetch().then(function() {
      var infoView;
      infoView = new InfoView({
        model: infoModel
      });
      return deferred.resolve(infoView);
    });
    return deferred.promise();
  };

  MainController.prototype.makeSubjectsMeta = function(billId) {
    var deferred, subjectsModel;
    deferred = new $.Deferred();
    subjectsModel = new SubjectsModel({
      id: billId
    });
    subjectsModel.fetch().then(function() {
      var subjectsView;
      subjectsView = new SubjectsView({
        model: subjectsModel
      });
      return deferred.resolve(subjectsView);
    });
    return deferred.promise();
  };

  MainController.prototype.makeAmendmentMeta = function(amendData) {
    var amendModel, amendView, deferred;
    deferred = new $.Deferred();
    amendModel = new AmendModel({
      results: amendData
    });
    amendView = new AmendView({
      model: amendModel
    });
    deferred.resolve(amendView);
    return deferred.promise();
  };

  MainController.prototype.welcomeView = function(billModel) {
    var welcomeView;
    welcomeView = new WelcomeView({
      model: billModel
    });
    $('#information').hide();
    this.listenTo(welcomeView, 'welcome:close', function() {
      this.options.regions.welcome.empty();
      return $('#information').show();
    });
    return this.options.regions.welcome.show(welcomeView);
  };

  MainController.prototype.searchView = function(billModel) {
    var searchView;
    searchView = new SearchView({
      model: billModel
    });
    this.listenTo(searchView, 'findBill:submit', function(billId) {
      return this.router.navigate('bills/' + billId, {
        trigger: true
      });
    });
    this.listenTo(searchView, 'welcome:show', function() {
      return this.welcomeView(searchView.model);
    });
    this.listenTo(searchView, 'search:bills:submit', function(query) {
      return this.router.navigate('bills/search/' + query, {
        trigger: true
      });
    });
    return this.options.regions.search.show(searchView);
  };

  MainController.prototype.searchResults = function(query) {
    var billsCollection;
    this.showSpinner(this.options.regions.content);
    billsCollection = new BillsCollection({
      query: query
    });
    return billsCollection.fetch().then((function(_this) {
      return function() {
        var searchResults;
        searchResults = new SearchResults({
          collection: billsCollection
        });
        _this.listenTo(searchResults, 'bill:submit', function(billId) {
          return this.router.navigate('bills/' + billId, {
            trigger: true
          });
        });
        return _this.options.regions.content.show(searchResults);
      };
    })(this));
  };

  return MainController;

})(Marionette.Controller);

module.exports = MainController;
