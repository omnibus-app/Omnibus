// Generated by CoffeeScript 1.7.1
var BubbleChart, EnactedView, data, util, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

_ = window._;

util = require('../../helpers/graph-util.coffee');

data = require('./../../../../assets/data/enacted.json');

BubbleChart = require('./../../helpers/bubble-chart.coffee');

EnactedView = (function(_super) {
  __extends(EnactedView, _super);

  function EnactedView() {
    return EnactedView.__super__.constructor.apply(this, arguments);
  }

  EnactedView.prototype.template = require('./enacted-view.jade');

  EnactedView.prototype.model = "EnactedModel";

  EnactedView.prototype.tagName = "svg";

  EnactedView.prototype.initialize = function() {};

  EnactedView.prototype.render = function() {
    return $(function() {
      var chart, render_vis;
      chart = null;
      render_vis = function(json) {
        chart = new BubbleChart(json);
        chart.start();
        return BubbleChart.display_all();
      };
      BubbleChart.display_all = (function(_this) {
        return function() {
          return chart.display_group_all();
        };
      })(this);
      BubbleChart.display_year = (function(_this) {
        return function() {
          return chart.display_by_year();
        };
      })(this);
      BubbleChart.toggle_view = (function(_this) {
        return function(view_type) {
          if (view_type === 'year') {
            return BubbleChart.display_year();
          } else {
            return BubbleChart.display_all();
          }
        };
      })(this);
      return render_vis(data);
    });
  };

  return EnactedView;

})(Marionette.ItemView);

module.exports = EnactedView;
